setwd("~/Documents/bayes_book/itog_scripts/Masha and Medved'")
library(rstan)
model <- stan_model(file = "medved.stan")
# В списке переменные надо называть точно также как и в STAN
df <- list(N = 2, y = c(0.5, -1))
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
fit_array = as.array(fit)
mcmc_hist(fit_array)
library(rstan)
library(bayesplot)
model <- stan_model(file = "medved.stan")
# В списке переменные надо называть точно также как и в STAN
df <- list(N = 2, y = c(0.5, -1))
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
fit_array = as.array(fit)
mcmc_hist(fit_array)
# И ещё один красивый рисунок!
mcmc_trace(fit_array)
library(ggplot2)
library(ggplot2)
library(ggplot2)
x <- seq(0,300,by=0.001)
y1 <- dnorm(x,50,3)
y2 <- dnorm(x,200,3)
qplot(x,y1+y2,geom='l')
qplot(x,y1+y2,geom='line')
library(ggplot2)
x <- seq(0,300,by=0.001)
y1 <- dnorm(x,50,3)
y2 <- dnorm(x,200,3)
qplot(x,y1+y2,geom='line')
library('ggplot2')
x <- seq(0,300,by=0.001)
y1 <- dnorm(x,50,3)
y2 <- dnorm(x,200,3)
qplot(x,y1+y2,geom='line')
qplot(x,0.5*y1 + 0.5*y2,geom='line')
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
library(rstan)
library(bayesplot)
model <- stan_model(file = "challenger.stan")
setwd("~/Documents/bayes_book/itog_scripts/challenger")
model <- stan_model(file = "challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
df <- read.csv('challenger.csv', sep='\t')
df
t = df$Temperature
y = df$Damage.Incident
t_new = 31
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t, t_new = t_new)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
# апостериорная плотность, распределение нового игрека и логарифмическое правдоподобие
fit_array = as.array(fit)
mcmc_hist(fit_array)
launch_shinystan(fit)
# интерактивные картинки
library("shinystan")
launch_shinystan(fit)
y
t
t[1]
t[1] + t[2]
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
t = df$Temperature
y = df$Damage.Incident
t_new = 31
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t, t_new = t_new)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
rstan:::rstudio_stanc("challenger.stan")
library(rstan)
library(bayesplot)
model <- stan_model(file = "challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
df <- read.csv('challenger.csv', sep='\t')
t = df$Temperature
y = df$Damage.Incident
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
# апостериорная плотность, распределение нового игрека и логарифмическое правдоподобие
fit_array = as.array(fit)
mcmc_hist(fit_array)
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
library(rstan)
library(bayesplot)
model <- stan_model(file = "challenger.stan")
df <- read.csv('challenger.csv', sep='\t')
t = df$Temperature
y = df$Damage.Incident
t_new = 31
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
# апостериорная плотность, распределение нового игрека и логарифмическое правдоподобие
fit_array = as.array(fit)
mcmc_hist(fit_array)
model <- stan_model(file = "challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
df <- read.csv('challenger.csv', sep='\t')
t = df$Temperature
y = df$Damage.Incident
t_new = 31
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
rstan:::rstudio_stanc("challenger.stan")
model <- stan_model(file = "challenger.stan")
df <- read.csv('challenger.csv', sep='\t')
t = df$Temperature
y = df$Damage.Incident
t_new = 31
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
# апостериорная плотность, распределение нового игрека и логарифмическое правдоподобие
fit_array = as.array(fit)
mcmc_hist(fit_array)
# интерактивные картинки
library("shinystan")
launch_shinystan(fit)
rstan:::rstudio_stanc("~/Documents/bayes_book/itog_scripts/challenger/challenger.stan")
model <- stan_model(file = "challenger.stan")
df <- read.csv('challenger.csv', sep='\t')
t = df$Temperature
y = df$Damage.Incident
t_new = 31
# В списке переменные надо называть точно также как и в STAN
df <- list(N = length(y), y = y, t = t)
# Получаем выборку из апостериорных распределений:
fit <- sampling(model, data = df)
# Посмотрим на наш fit
fit
# визуализируем всё это дело
# апостериорная плотность, распределение нового игрека и логарифмическое правдоподобие
fit_array = as.array(fit)
mcmc_hist(fit_array)
